@{
    ViewBag.Title = "Map";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<style>
    #listing {
        overflow: auto;
        overflow-x: hidden;
    }

    #resultsTable {
        cursor: pointer;
        border-collapse: collapse;
        width: 100%
    }

    .placeIcon {
        width: 32px;
        height: 32px;
        margin: 18px;
    }
    .arrowIcon {
        width: 32px;
        height: 32px;
        margin: 18px;
    }

    #address {
         width:100%;
         margin-bottom:20px;
         margin-top:20px;
         border-left-width:0px;
         border-top-width:0px;
         border-right-width:0px;
         border-bottom-color:black
    }

    table {
        font-size: 15px;
    }

    tr {
        height: 50px;
    }

    .iw_table_row {
        height: 18px;
    }

    .iw_attribute_name {
        font-weight: bold;
        text-align: left;
    }

    .radio {
        margin-bottom: 10px  ;
    }
        
    .radio label, .checkbox label {
        padding-left:0;
    }
    .radio input[type="radio"] {
      position: absolute;
      opacity: 0;
    }
    .radio input[type="radio"] + .radio-label:before {
      content: '';
      background: #f4f4f4;
      border-radius: 100%;
      border: 1px solid #b4b4b4;
      display: inline-block;
      width: 1.4em;
      height: 1.4em;
      position: relative;
      top: 0em;
      margin-right: 1em;
      vertical-align: top;
      cursor: pointer;
      text-align: center;
      -webkit-transition: all 250ms ease;
      transition: all 250ms ease;
    }
    .radio input[type="radio"]:checked + .radio-label:before {
      background-color: #3197EE;
      box-shadow: inset 0 0 0 4px #f4f4f4;
    }
    .radio input[type="radio"]:focus + .radio-label:before {
      outline: none;
      border-color: #3197EE;
    }
    .radio input[type="radio"]:disabled + .radio-label:before {
      box-shadow: inset 0 0 0 4px #f4f4f4;
      border-color: #b4b4b4;
      background: #b4b4b4;
    }
    .radio input[type="radio"] + .radio-label:empty:before {
      margin-right: 0;
}
</style>
<div class="container" style="margin:0;width:100%">
    <div class="row">
        <div class="col-md-3 col-sm-3 col-xs-12" id="listing" style="margin:0;padding:0">
            <div style="margin:10px;padding:20px">
                <h3 style="margin-top:0">Search dog services</h3>
                <input id="address" type="text" placeholder="Enter an address" onfocus="geolocate()" style="margin-top:5px">

                <p>Select search type</p>
                <div class="container" style="padding:0;">
                    <div class="radio">
                        <input class="type" id="radio-1" name="radio" type="radio" value="park" checked />
                        <label for="radio-1" class="radio-label">Park</label>
                    </div>
                    <div class="radio">
                        <input class="type" id="radio-2" name="radio" type="radio" value="veterinary_care" />
                        <label for="radio-2" class="radio-label">Veterinary</label>
                    </div>
                    <div class="radio">
                        <input class="type" id="radio-3" name="radio" type="radio" value="pet_store" />
                        <label for="radio-3" class="radio-label">Pet Store</label>
                    </div>
                </div>
                <br>

                <button class="button button-primary-flat" id="searchBtn" onclick="mapSearch()" style="width:100%;max-width:280px"><span class="glyphicon glyphicon-search"></span>Search</button>
                <br>
                <!--
    <p>Select search type</p>
    <div>
        <select id="type">
            <option value="park">Park</option>
            <option value="veterinary_care">Vet</option>
            <option value="pet_store">Pet Shop</option>
        </select>
    </div>

    <br>
    <p>Select search range</p>
    <div>
        <select id="range">
            <option value="500">500 meters</option>
            <option value="1000">1000 meters</option>
            <option value="3000">3000 meters</option>
        </select>
    </div>
    -->
            </div>
            <table class="table-striped" id="resultsTable">
                <tbody id="results"></tbody>
            </table>
        </div>
        <div class="col-md-9 col-sm-9 col-xs-12" id="map" style="margin:0;padding:0"></div>
    </div>
</div>
@section Scripts{
    <script>
        $(document).ready(function () {
            if (document.documentElement.clientWidth > 768) {
                    resizeMap();
                }
                else {
                    xsDisplay();
            }

            $(window).resize(function (evt) {
                if (document.documentElement.clientWidth > 768) {
                    resizeMap();
                }
                else {
                    xsDisplay();
                }
            });
        });

        function resizeMap() {
            var m = document.getElementById('map');
            m.style.width = "75%";
            m.style.height = (parseInt(document.documentElement.clientHeight) - 50) + 'px';
            var l = document.getElementById('listing');
            l.style.height = (parseInt(document.documentElement.clientHeight) - 50) + 'px';
            var t = document.getElementById("resultsTable");
            t.style.display = "";
        }

        function xsDisplay() {
            var m = document.getElementById('map');
            m.style.height = "300px";
            m.style.width = "100%";
            var l = document.getElementById('listing');
            l.style.height = "300px";
            var t = document.getElementById("resultsTable");
            t.style.display = "none";
        }
    </script>
    <script defer async src="https://maps.googleapis.com/maps/api/js?key=AIzaSyCQwwUZZul1HPDRMfV7U7ecWHM__HsXIXQ&libraries=places&callback=initMap"></script>
    <script>
        var state = false;
        var map;
        var service;
        var infowindow;
        var newCenter;
        var currentType;
        var autocomplete;
        var hostnameRegexp = new RegExp('^https?://.+?/');
        var markers;

        function mapSearch() {
            state = true;
            initMap();
        }

        //initialize map
        function initMap() {

            //clean previous results
            markers = [];
            clearResults();
            //set address autocomplete
            autocomplete = new google.maps.places.Autocomplete(document.getElementById('address'), { types: ['geocode'] });
            autocomplete.setFields(['address_component']);

            //check address
            var address = $("#address").val().trim();
            var geocoder = new google.maps.Geocoder();
            geocoder.geocode({ 'address': address }, function (results, status) {

                // address is valid
                if (status == google.maps.GeocoderStatus.OK) {

                    newCenter = results[0].geometry.location;
                    infowindow = new google.maps.InfoWindow();

                    //set zoom level
                    var zoom = 15;
                    var m = document.getElementById('map');
                    if (m.style.height <= "300px") {
                        zoom = 12
                    }

                    //get search range then set zoom level
                    /*
                    var radius = $("#range option:selected").val();
                    var zoom;
                    switch (radius) {
                        case "500":
                            zoom = 15;
                            break;

                        case "1000":
                            zoom = 14;
                            break;

                        case "3000":
                            zoom = 13;
                            break;

                    }
                    */

                    //draw new map
                    map = new google.maps.Map(document.getElementById('map'), {
                        center: newCenter,
                        zoom: zoom
                    });

                    //set user location marker
                    var marker = new google.maps.Marker({
                        map: map,
                        position: newCenter,
                        animation: google.maps.Animation.DROP
                    });
                    infowindow = new google.maps.InfoWindow();
                    infowindow.setContent("You are here");
                    infowindow.open(map, marker)
                    google.maps.event.addListener(marker, 'click', function () {
                        infowindow.setContent("You are here");
                        infowindow.open(map, this);
                    });

                    //check search type
                    var type = $(".type:checked").val();
                    currentType = type;
                    var keyword = "dog";
                    var radius = 3000;
                    if (type == "park") {
                        keyword = "dog friendly";
                        radius = 1500;
                    }

                    //create search request
                    var request = {
                        location: newCenter,
                        radius: radius,                 
                        type: [type],
                        keyword: keyword
                    };

                    service = new google.maps.places.PlacesService(map);
                    service.nearbySearch(request, callback1);
                }

                //address is invalid
                else {
                    var defaultCenter = new google.maps.LatLng(-37.813629, 144.963058);
                    map = new google.maps.Map(document.getElementById('map'), {
                        center: defaultCenter,
                        zoom: 8
                    });
                    if (state == true) {
                        alert("please input a valid address");
                        state = false;
                    }
                }
            });
        }

        //nearby search callback
        function callback1(results, status) {
            var isMatch = false;
            if (status == google.maps.places.PlacesServiceStatus.OK) {
                for (var i = 0; i < results.length; i++) {
                    /*
                    if (currentType == results[i].types[0]) {
                    */
                        isMatch = true;
                        var request = {
                            placeId: results[i].place_id
                        }
                        //get detail info of result
                        service.getDetails(request, callback2)
                    //}
                }
            }

            if (isMatch == false) {
                alert("No result found");
            }
        }

        //detail search callback
        function callback2(place, status) {
            if (status == google.maps.places.PlacesServiceStatus.OK) {
                createMarker(place)
            }
        }

        //add markers
        function createMarker(place) {
            var url;
            //choose corresponding icon
            switch (currentType) {
                case "park":
                    url = "https://i.loli.net/2019/10/06/8tSUHzGg1R5WpLD.png";
                    break;
                case "veterinary_care":
                    url = "https://i.loli.net/2019/09/29/vDK87sCGSJIehwu.png";
                    break;
                case "pet_store":
                    url = "https://i.loli.net/2019/09/29/NgeTOE3zP9iQUj8.png";
                    break;
            }

            var image = {
                url: url,
                size: new google.maps.Size(32, 32),
                origin: new google.maps.Point(0, 0),
                anchor: new google.maps.Point(0, 0)
            };

            //set search result markers
            var marker = new google.maps.Marker({
                map: map,
                position: place.geometry.location,
                icon: image,
                animation: google.maps.Animation.DROP
            });

            google.maps.event.addListener(marker, 'click', function () {
                infowindow.open(map, this);
                buildIWContent(place);
            });

            //add marker to markers list
            markers.push(marker)
            // add search result to list
            addResult(place, markers.length - 1);
        }

        //set info window content
        function buildIWContent(place) {
            var content = '<h5 id="iw-url"></h5>' +
                '<table><tr id="iw-address-row" class="iw_table_row"><td class="iw_attribute_name">Address: </td><td id="iw-address"></td></tr>' +
                '<tr id="iw-phone-row" class="iw_table_row"><td class="iw_attribute_name">Telephone: </td><td id="iw-phone"></td></tr>' +
                '<tr id="iw-rating-row" class="iw_table_row"><td class="iw_attribute_name">Rating: </td><td id="iw-rating"></td></tr>' +
                '<tr id="iw-website-row" class="iw_table_row"><td class="iw_attribute_name">Website: </td><td id="iw-website"></td></tr></table>'

            infowindow.setContent(content);
            document.getElementById("iw-url").innerHTML = '<b><a href="' + place.url + '">' + place.name + '</a></b>';
            document.getElementById("iw-address").textContent = place.vicinity;

            if (place.formatted_phone_number) {
                document.getElementById("iw-phone-row").style.display = '';
                document.getElementById("iw-phone").textContent = place.formatted_phone_number;
            } else {
                document.getElementById("iw-phone-row").style.display = 'none';
            }

            if (place.rating) {
                var ratingHtml = '';
                for (var i = 0; i < 5; i++) {
                    if (place.rating < (i + 0.5)) {
                        ratingHtml += '&#10025;';
                    } else {
                        ratingHtml += '&#10029;';
                    }
                    document.getElementById("iw-rating-row").style.display = '';
                    document.getElementById("iw-rating").innerHTML = ratingHtml;
                }
            } else {
                document.getElementById("iw-rating-row").style.display = 'none';
            }

            if (place.website) {
                var fullUrl = place.website;
                var website = hostnameRegexp.exec(place.website);
                if (website === null) {
                    website = 'https://' + place.website + '/';
                    fullUrl = website;
                }
                document.getElementById("iw-website-row").style.display = '';
                document.getElementById("iw-website").textContent = website;
            } else {
                document.getElementById("iw-website-row").style.display = 'none';
            }
        }

        //restrict autocomplete range to current position
        function geolocate() {
            if (navigator.geolocation) {
                navigator.geolocation.getCurrentPosition(function (position) {
                    var geolocation = {
                        lat: position.coords.latitude,
                        lng: position.coords.longitude
                    };

                    var circle = new google.maps.Circle({
                        center: geolocation,
                        radius: position.coords.accuracy
                    });
                    autocomplete.setBounds(circle.getBounds());
                });
            }
        }

        //add search result to list
        function addResult(result, i) {
            var results = document.getElementById("results");
            var url;
            //choose corresponding icon
            switch (currentType) {
                case "park":
                    url = "https://i.loli.net/2019/10/06/8tSUHzGg1R5WpLD.png";
                    break;
                case "veterinary_care":
                    url = "https://i.loli.net/2019/09/29/vDK87sCGSJIehwu.png";
                    break;
                case "pet_store":
                    url = "https://i.loli.net/2019/09/29/NgeTOE3zP9iQUj8.png";
                    break;
            }

            var tr = document.createElement("tr");
            tr.onclick = function () {
                google.maps.event.trigger(markers[i], 'click');
            };
            var iconTd = document.createElement("td");
            var nameTd = document.createElement("td");
            var arrowTd = document.createElement("td");

            var icon = document.createElement("img");
            var arrow = document.createElement("img");
            
            icon.src = url;
            icon.setAttribute("class", "placeIcon");
            icon.setAttribute("className", "placeIcon");

            arrow.src = "https://i.loli.net/2019/10/02/sL73ancDOHTBy6h.png";
            arrow.setAttribute("class", "arrowIcon");
            arrow.setAttribute("className", "arrowIcon");

            var name = document.createTextNode(result.name);

            iconTd.appendChild(icon);
            nameTd.appendChild(name);
            arrowTd.appendChild(arrow);
            tr.appendChild(iconTd);
            tr.appendChild(nameTd);
            tr.appendChild(arrowTd);
            results.appendChild(tr);
        }

        //clear results
        function clearResults() {
            var results = document.getElementById("results");
            while (results.childNodes[0]) {
                results.removeChild(results.childNodes[0]);
            }
        }
    </script>
}
